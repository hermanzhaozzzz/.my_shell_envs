# 设置USER显示
DEFAULT_USER=$USER



# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git
	z
	zsh-syntax-highlighting
	zsh-autosuggestions
)


source $ZSH/oh-my-zsh.sh

# 高亮插件,需要配置在所有插件之后！
source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#############################
# PATH & alias              #
#############################
# homebrew
export PATH=/opt/homebrew/bin/:$PATH
export PATH=/opt/homebrew/opt/openjdk/bin:$PATH

# ide & language
# alias spyder="/Applications/Spyder.app/Contents/MacOS/Spyder"
# alias code="/Applications/Visual\ Studio\ Code.app/Contents/MacOS/Electron"
alias code="/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin/code"
export PATH=$PATH:$HOME/Library/Application\ Support/JetBrains/Toolbox/scripts
export PATH=$PATH:$HOME/.cargo/bin # rust

# ssh
alias sshabyss.ssh='ssh zhaohuanan@162.105.250.207'
alias startsc="open -a SafeConnect.app && open -a Step\ Two.app"
alias sshpolaris.ssh="ssh chengqiyi_zhn@10.100.1.88"

# fix zcat
alias zcat="gunzip -d -c"

# bioinformatics
alias checkbam="for i in *.bam ;do (samtools quickcheck \$i && echo \"ok    \" \$i || echo \"error    \" \$i);done"
export PATH=$PATH:${HOME}/.my_shell_envs/bin
export PATH=$PATH:/Volumes/zhaohn_HD/Bio/0.apps/homer/bin




#创建命令
alias del='trash'
alias dellist='trashlist'
alias delback='undelfile'
alias delclear='cleartrash'

#mv命令覆盖rm命令
trash()
{
    mv $@ ~/Trash/
}

#显示回收站中垃圾清单
trashlist()
{
    ls -alt ~/Trash/*
}

#找回回收站相应文件
undelfile()
{
    mv -i ~/Trash/* ./
}

#清空回收站
cleartrash()
{
echo "确认删除回收站所有文件？？？ ~/Trash [y/n]"
read confirm
if [ ${confirm} = "y" ] ;then
    /bin/rm -rf ~/Trash/*
    /bin/rm -rf ~/Trash/.* 2>/dev/null
fi
}
#############################
# surge代理                  #
#############################
export https_proxy=http://127.0.0.1:8234
export http_proxy=http://127.0.0.1:8234
export all_proxy=socks5://127.0.0.1:8235;
export no_proxy="192.168.59.102,192.168.59.103"

#############################
# PATH                      #
#############################
# add doom emacs
export PATH=$PATH:$HOME/.emacs.d/bin
export PATH=$PATH:$HOME/.cargo/bin
export PATH=$PATH:/Library/TeX/texbin
export PATH=$PATH:$HOME/Bio/0.apps/hisat-3n_allType
export PATH=$PATH:/Applications/VirtualBox.app/Contents/MacOS


#############################
# conda setting             #
#############################
# doc!!!
# # for arm64 macos
# URL=https://micro.mamba.pm/api/micromamba/osx-arm64/latest
# # for x86_64 macos
# URL=https://micro.mamba.pm/api/micromamba/osx-64/latest

# ROOT_PATH=$HOME/micromamba
# mkdir $ROOT_PATH
# cd $ROOT_PATH
# curl -Ls $URL | tar -xvj bin/micromamba
# cd bin
# ./micromamba shell init -s zsh -p $ROOT_PATH
#############################
alias conda=micromamba
alias mamba=micromamba
# for arm64
alias echo_conda_rosetta='echo "CONDA_SUBDIR=osx-64 conda create -n rosetta_macs2 python=3.8\nconda activate rosetta\nconda env config vars set CONDA_SUBDIR=osx-64\nconda deactivate\nconda activate rosetta"'


# >>> mamba initialize >>>
# !! Contents within this block are managed by 'mamba init' !!
export MAMBA_EXE="$HOME/micromamba/bin/micromamba";
export MAMBA_ROOT_PREFIX="$HOME/micromamba";
__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    if [ -f "$HOME/micromamba/etc/profile.d/micromamba.sh" ]; then
        . "$HOME/micromamba/etc/profile.d/micromamba.sh"
    else
        export  PATH="$HOME/micromamba/bin:$PATH"  # extra space after export prevents interference from conda init
    fi
fi
unset __mamba_setup
# <<< mamba initialize <<<


conda activate base
